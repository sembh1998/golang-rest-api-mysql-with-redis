<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Page Title</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <link rel='stylesheet' type='text/css' media='screen' href='main.css'>
    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <script src='main.js'></script>
    <!-- JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
        crossorigin="anonymous"></script>
</head>

<body onload="initialLoad()">
    <div class="container">
        <div class="row py-3">
            <div class="col-12">
                <h1>html serving: {{ .hostname }}</h1>
                <h1 id="backend_serving">Backend that is serving: {{ .hostname }}</h1>
            </div>
        </div>
    </div>
    <div class="container bg-warning">
        <div class="row">
            <div class="col-md-6">
                <h1>Departments</h1>
                <p>This is some text.</p>
                <div class="row d-flex align-items-end">
                    <div class="col-10">
                        <div class="mb-3">
                            <label for="department_name" class="form-label">Department name</label>
                            <input type="text" class="form-control" id="department_name"
                                placeholder="nombre del departamento">
                        </div>
                    </div>
                    <div class="col-2 py-3" id="boton_bipolar">
                        <button type="button" class="btn btn-primary" onclick="createDepartment()">
                            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                                class="bi bi-plus-circle-fill" viewBox="0 0 16 16">
                                <path
                                    d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z" />
                            </svg>
                        </button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th scope="col">Order(no id)</th>
                                    <th scope="col">Name of the department</th>
                                    <th scope="col">Operations</th>
                                </tr>
                            </thead>
                            <tbody id="table_of_departments">

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <h1>Employees</h1>
                <p>This is some text.</p>
            </div>
        </div>
    </div>
    <script>

        table_of_departments = document.getElementById("table_of_departments");

        const url = "http://127.0.0.1:8084";

        // Example POST method implementation:
        async function postData(url = '', data = {}) {
            // Default options are marked with *
            const response = await fetch(url, {
                method: 'POST', // *GET, POST, PUT, DELETE, etc.
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json'
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                body: JSON.stringify(data) // body data type must match "Content-Type" header
            });
            return response.json(); // parses JSON response into native JavaScript objects
        }

        async function putData(url = '', data = {}) {
            // Default options are marked with *
            const response = await fetch(url, {
                method: 'PUT', // *GET, POST, PUT, DELETE, etc.
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json'
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                body: JSON.stringify(data) // body data type must match "Content-Type" header
            });
            return response.json(); // parses JSON response into native JavaScript objects
        }

        async function deleteData(url = '', data = {}) {
            // Default options are marked with *
            const response = await fetch(url, {
                method: 'DELETE', // *GET, POST, PUT, DELETE, etc.
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json'
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                body: JSON.stringify(data) // body data type must match "Content-Type" header
            });
            return response.json(); // parses JSON response into native JavaScript objects
        }

        function initialLoad() {
            loadDepartments();

        }

        function loadDepartments() {
            table_of_departments = document.getElementById("table_of_departments");
            backend_serving = document.getElementById("backend_serving");

            fetch(url + '/api/v1/crud/departments')
                .then((response) => response.json())
                .then((data) => {
                    console.log(data);
                    departments = data.departments;
                    console.log(departments);
                    htmlstring = "";
                    for (var i = 0; i < departments.length; i++) {
                        console.log(departments[i]);
                        htmlstring += "<tr><th scope>" + (i + 1) + "</th><td>" + departments[i].department_name + "</td><td>" +
                            "<div onclick='deleteDepartment(" + departments[i].department_id + ")'>üóëÔ∏è</div>" +
                            "<div onclick='getOneDepartment(" + departments[i].department_id + ")'>üñâ</div>" +
                            "</td></tr>";
                    }
                    console.log(htmlstring);
                    console.log(table_of_departments);
                    table_of_departments.innerHTML = htmlstring;
                    backend_serving.innerHTML = "Backend that is serving: "+data.serving;
                })
        }

        async function createDepartment() {
            department_name = document.getElementById("department_name");
            backend_serving = document.getElementById("backend_serving");
            console.log(department_name.value);

            await postData(url + '/api/v1/crud/departments', { department_name: department_name.value })
                .then((data) => {
                    console.log(data); // JSON data parsed by `data.json()` call
                    backend_serving.innerHTML = "Backend that is serving: "+data.serving;
                });

            department_name.value = "";
            
            loadDepartments()
        }

        async function getOneDepartment(id = 0) {
            department_name = document.getElementById("department_name");
            boton_bipolar = document.getElementById("boton_bipolar");
            backend_serving = document.getElementById("backend_serving");
            department_name.value = "";
            await fetch(url + '/api/v1/crud/departments/' + id)
                .then((response) => response.json())
                .then((data) => {
                    console.log(data);
                    department_name.value = data.department.department_name;
                    boton_bipolar.innerHTML = getUpdateButtonString(data.department.department_id);
                    backend_serving.innerHTML = "Backend that is serving: "+data.serving;
                })
        }

        async function deleteDepartment(id = 0) {
            await deleteData(url + '/api/v1/crud/departments/' + id)
                .then((data) => {
                    console.log("deleteDepartment");
                    console.log(data); // JSON data parsed by `data.json()` call
                });
            loadDepartments()
        }

        async function updateDepartment(id = 0) {
            department_name = document.getElementById("department_name");
            boton_bipolar = document.getElementById("boton_bipolar");
            console.log(department_name.value);

            await putData(url + '/api/v1/crud/departments/' + id, { department_name: department_name.value })

            department_name.value = "";
            loadDepartments()
            boton_bipolar.innerHTML = getCreateButtonString();
        }

        function getCreateButtonString() {
            return '<button type="button" class="btn btn-primary" onclick="createDepartment()">' +
                ' <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16">' +
                ' <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z"/>' +
                '/svg>' +
                '/button>';
        }

        function getUpdateButtonString(id = 0) {
            return '<button type="button" class="btn btn-success" onclick="updateDepartment(' + id + ')">' +
                ' <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-save" viewBox="0 0 16 16">' +
                ' <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z"/>' +
                '</svg>' +
                '</button>';
        }
    </script>
</body>

</html>